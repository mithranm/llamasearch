{
    "name": "LlamaSearch Development",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    "runArgs": [
        "--gpus",
        "all"
    ],
    "workspaceFolder": "/workspace",
    "mounts": [
        "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
        "source=C:/Users/mithr/Documents/gh-issues,target=/workspace/data/gh-issues,type=bind,consistency=cached",
        "source=/mnt/sdd/,target=/workspace/data/fast,type=bind,consistency=cached",
        "source=/mnt/sdc/,target=/workspace/data/slow,type=bind,consistency=cached"
    ],
    "initializeCommand": "powershell -Command \"if (-not (Get-WmiObject Win32_VideoController | Where-Object { $_.Name -match 'NVIDIA' })) { Write-Host 'No NVIDIA GPU detected. This dev container requires an NVIDIA GPU.'; exit 1 }\"",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "charliermarsh.ruff",
                "ms-python.black-formatter"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/opt/conda/envs/rapids/bin/python",
                "python.formatting.provider": "black",
                "editor.formatOnSave": true,
                "editor.rulers": [
                    88
                ],
                "files.trimTrailingWhitespace": true,
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "/bin/bash",
                        "args": [
                            "-l"
                        ]
                    }
                },
                "terminal.integrated.defaultProfile.linux": "bash"
            }
        }
    },
    "forwardPorts": [
        7860
    ],
    "remoteUser": "vscode",
    "postCreateCommand": "bash -c '. /opt/conda/etc/profile.d/conda.sh && conda activate rapids && python -c \"import sys; print(f\\\"Python interpreter: {sys.executable}\\\")\"'"
}